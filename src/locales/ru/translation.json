{
    "hero": {
        "title": "Fullstack-разработчик",
        "greeting": "Привет, меня зовут Георгий",
        "description": "Я специализируюсь на создании исключительных цифровых решений."
    },
    "about": {
        "title": "Обо мне",
        "description1": "Опытный fullstack-разработчик с глубокими знаниями в области программной инженерии и большим практическим опытом разработки полнофункциональных приложений.",
        "description2": "У меня обширный опыт работы с инструментами ИИ в контексте разработки с четким пониманием принципов создания качественных промптов. В настоящее время изучаю MCP для более естественного процесса разработки с использованием ИИ.",
        "description3": "Больше всего я интересуюсь разработкой API и логики для высоконагруженных систем, но открыт для любого опыта.",
        "languages": "Английский - C1, Испанский - A2, Русский - Родной"
    },
    "projects": {
        "title": "Проекты",
        "description": "Избранные работы. Каждый проект уникален и демонстрирует различные навыки и технологии.",
        "tunelike-api": {
            "title": "API социальной платформы",
            "shortDescription": "API для социальной платформы с механиками знакомств и событий",
            "fullDescription": "Это самый масштабный проект, которым я до сих пор занимался, и я действительно горжусь им.\n\nРазработан полный и безопасный API для социальной платформы \"TuneLike\" на базе ASP.NET Core с соблюдением принципов чистой архитектуры и высокой производительности. Платформа интегрирует несколько сложных систем:\n\n- Надежная система аутентификации с JWT-безопасностью, множеством методов входа и всесторонним управлением аккаунтами\n- Система real-time чата на базе SignalR для мгновенного обмена сообщениями в личных, групповых и событийных чатах\n- Интеллектуальный модуль знакомств с умными алгоритмами подбора, управлением профилями и системами взаимодействия с механизмами контроля конфиденциальности\n- Система поиска сообщества с событиями, региональной фильтрацией, управлением участием и механизмами обратной связи\n- Расширенный сбор данных и аналитика для персонализированных рекомендаций на основе музыкальных предпочтений и активности пользователей\n- Универсальные сервисы, включая настройки аккаунта, реферальные системы и психологическое профилирование на основе музыкальных вкусов\n\nAPI был развернут на Linux VPS с использованием Nginx для эффективной маршрутизации компонентов сервиса, налаживания коммуникации между базой данных MongoDB, медиа-сервисами и клиентскими приложениями. Реализация использует современные практики веб-разработки, включая асинхронное программирование, стратегии кэширования в памяти и тщательную обработку ошибок с подробным логированием.\n\nЭтот проект демонстрирует успешную интеграцию нескольких сложных систем в единую, масштабируемую и безопасную платформу, призванную создавать значимые социальные связи через общие музыкальные интересы.",
            "images": {
                "auth": {
                    "description": "Система аутентификации в TuneLike построена на ASP.NET Core и следует современным практикам безопасности:\n\n- JWT-аутентификация: Реализует безопасную токен-based аутентификацию с поддержкой проверки claims\n- Множество методов входа: Традиционная аутентификация по email/паролю с хешированием паролей BCrypt и OAuth-интеграцией с Яндексом\n- Управление аккаунтами: Регистрация пользователей с проверкой имени пользователя и email, процесс восстановления пароля, проверка токенов, управление настройками аккаунта\n- Функции безопасности: Ограничение частоты для чувствительных операций, функциональность отзыва токенов и подробное протоколирование\n- Идентификация пользователя: Привязка профиля к провайдерам аутентификации и система флагов для отметки статуса верификации аккаунта\n\nКонтроллер аутентификации демонстрирует чистый подход с внедрением зависимостей и всесторонней документацией Swagger."
                },
                "chat": {
                    "description": "Система чата построена на архитектуре real-time коммуникаций:\n\n- Типы чатов: Личные диалоги один-на-один, групповые чаты с ролями администратора и модератора, событийные чаты для взаимодействия сообщества\n- Real-time сообщения: Интеграция SignalR для мгновенной доставки сообщений, управление подключениями с уникальными ID и служба очереди сообщений\n- Управление чатом: Всестороннее управление участниками, возможности модерации, настройка чата (имя, аватар) и настройки уведомлений\n- Возможности сообщений: Поддержка текстового контента и вложений, пагинация истории сообщений, обогащение метаданными об отправителе\n- Безопасность: Проверка авторизации для всех операций, валидация участников для доступа к чату, система разрешений на основе ролей\n\nРеализация следует принципам чистой архитектуры с использованием MongoDB для хранения данных и всесторонней проверкой ввода."
                },
                "dating": {
                    "description": "Модуль знакомств предоставляет полный набор эндпоинтов для управления пользовательскими профилями знакомств, совпадениями и взаимодействиями. Обеспечивает функциональность управления профилями, поиска кандидатов, подбора и взаимодействия пользователей, включая лайки, дизлайки, блокировки и жалобы. Реализует стратегии кэширования для просмотренных профилей и фильтров знакомств для повышения производительности.\n\n- Управление профилем: Полноценное создание и настройка профиля знакомств, настройки предпочтений и отслеживание активности\n- Умный подбор: Алгоритмический поиск кандидатов с опциями фильтрации, рекомендации совпадений, событийный подбор\n- Система взаимодействия: Функциональность лайков/дизлайков, обнаружение взаимных совпадений, возможности блокировки и жалоб\n- Оптимизация кэша: Кэширование в памяти просмотренных профилей и фильтров, оптимизированное получение кандидатов\n- Настройки конфиденциальности: Функциональность блокировки пользователей, опции удаления совпадений, управление видимостью профиля\n- Безопасность: JWT-авторизация для всех операций, всесторонняя проверка ввода, надежная обработка ошибок\n\nРеализация следует принципам RESTful с асинхронными операциями и подробным протоколированием."
                },
                "events": {
                    "description": "Модуль событий управляет обнаружением, деталями и участием пользователей в социальном контексте. Новые события регулярно собираются из общедоступных источников агрегаторов билетов с помощью python-скриптов, запланированных в фоновом режиме.\n\n- Обнаружение событий по регионам: Просмотр событий по городам, возможности фильтрации по различным критериям, пагинация для эффективной загрузки\n- Детали событий: Полная информация о событии, данные о месте проведения и информация об участниках с отображением аватаров\n- Управление участием: Переключение участия одним кликом, отслеживание участников, подтверждение присутствия\n- Система обратной связи: Отзывы и оценки пользователей для посещенных событий, управление обратной связью, показатели качества событий\n- Вовлечение пользователей: Отображение недавних участников, подсчет участий, социальная интеграция\n- Безопасность: JWT-аутентификация для операций участников и проверка ввода для всех взаимодействий\n\nРеализация следует сервис-ориентированному дизайну с обработкой исключений и подробным протоколированием ошибок."
                },
                "data": {
                    "description": "Система сбора данных анализирует активность пользователей и музыкальные предпочтения:\n\n- Отслеживание активности пользователей: Мониторинг паттернов взаимодействия с платформой, анализ взаимодействия с событиями и контентом, запись поведения при просмотре\n- Анализ музыкального профиля: Извлечение и обработка информации о плейлистах пользователей, сбор метаданных исполнителей и треков, категоризация музыки по различным атрибутам\n- Система рекомендаций: Использование собранных данных для генерации персонализированных рекомендаций событий, создание персонализированных лент контента, реализация коллаборативной фильтрации\n- Соображения конфиденциальности: Прозрачная политика сбора данных, пользовательский контроль над настройками обмена данными, процессы анонимизации\n\nСистема использует методы анализа данных для улучшения пользовательского опыта с соблюдением соответствующих границ конфиденциальности."
                },
                "utilities": {
                    "description": "Служебные сервисы предоставляют вспомогательную функциональность на платформе:\n\n- Настройки аккаунта: Всестороннее управление пользовательскими предпочтениями, контроль уведомлений и настройки конфиденциальности\n- Реферальная система: Отслеживание приглашений пользователей, механизмы вознаграждения за успешные приглашения, аналитика конверсии\n- Психологическое профилирование: Анализ музыкальных предпочтений для определения черт личности, распознавание поведенческих паттернов, создание профилей предпочтений пользователей\n- Сквозные функции: Интеграция email-сервиса для уведомлений, инфраструктура логирования и мониторинга, сохранение настроек\n\nЭти служебные сервисы улучшают основную функциональность платформы, создавая более персонализированный пользовательский опыт."
                }
            }
        },
        "simple-media-storage": {
            "title": "Простое медиахранилище",
            "shortDescription": "Многоразовое медиахранилище для pet-проектов",
            "fullDescription": "Комплексное, безопасное и масштабируемое решение для управления медиа с надежными функциями:\n\nАрхитектура:\n- Дизайн RESTful API\n- JWT-аутентификация\n- Внедрение зависимостей для модульной композиции сервисов\n- Поддержка межсайтового обмена ресурсами (CORS)\n\nФункции безопасности:\n- Авторизация на основе политик\n- Ограничения размера файла (до 5 МБ)\n- Безопасная генерация пути файла\n- Поддержка ETag и кэширования\n\nОсновные эндпоинты:\n- Загрузка медиа (файл/URL)\n- Список медиа\n- Получение медиа с опциональной обрезкой\n- Обновление метаданных медиа\n- Удаление медиа\n\nОптимизация производительности:\n- Сжатие изображений\n- Конвертация в WebP\n- Заголовки кэширования\n- Эффективная обработка файлов\n\nAPI представляет собой сложное, готовое к производству медиахранилище и решение для обработки с акцентом на гибкость, производительность и безопасность.",
            "images": {
                "imageProcessing": {
                    "description": "Система медиахранилища - это модульный веб-API ASP.NET Core, разработанный для эффективного управления файлами и обработки изображений.\n\nКлючевые технологические решения:\n\n- База данных: MongoDB для гибкого хранения метаданных медиа\n- Хранение файлов: Физическое хранение файловой системы с организованной структурой папок\n\nОбработка изображений:\n\n- Использует ImageMagick для расширенной обработки изображений\n- Поддерживает автоматическое изменение размера и сжатие изображений\n- Конвертирует загруженные изображения в формат WebP для оптимальной веб-производительности\n\nОсновные механики:\n\n- Генерация уникальных идентификаторов для каждого медиа-элемента\n- Поддержка хранения метаданных (владелец, размеры, размер файла)\n- Гибкая обработка файлов с автоматической генерацией пути\n- Встроенное кэширование и поддержка ETag для эффективной подачи файлов\n\nОсобенности:\n\n- Ограничение максимального размера изображения (1000 пикселей)\n- Автоматическая конвертация в WebP с качеством 75%\n- Отслеживание центральной точки для интеллектуальной обрезки\n- Поддержка загрузки через файл или URL"
                },
                "cropSpecification": {
                    "description": "Система спецификации обрезки - гибкий, предварительно настроенный механизм обрезки изображений, позволяющий точно и многократно использовать конфигурации обрезки:\n\nТехнический подход:\n\n- Реализовано как система конфигурации с поддержкой репозитория\n- CRUD-операции для спецификаций обрезки\n- Поддержка нескольких типов и размеров обрезки\n- Динамическая генерация вариаций изображений\n\nМодель CropSpecification со свойствами:\n\n- Название: Уникальный идентификатор обрезки\n- Ширина: Целевая ширина обрезки\n- Высота: Целевая высота обрезки\n- Тип: Алгоритм/стратегия обрезки\n\nРабочий процесс:\n\n- Можно создавать, обновлять, перечислять и удалять предопределенные спецификации обрезки\n- Контроллер медиа использует эти спецификации для генерации согласованных вариаций изображений\n- Обеспечивает интеллектуальную, настраиваемую обрезку изображений без повторных вычислений"
                }
            }
        },
        "dbclient": {
            "title": "DBClient",
            "shortDescription": "Мощный клиент управления базами данных для металлургического завода на C#",
            "fullDescription": "DBClient - это полный инструмент управления базами данных, который я разработал специально для металлургического завода PROMEKZ.\n\nПриложение предоставляет полный набор инструментов для управления инвентарем, клиентскими отношениями и финансовыми транзакциями. Пользователи могут отслеживать проданные товары, контролировать уровни хранения, вести записи клиентов, рассчитывать счета и долги, предоставлять кредиты - все в одном интерфейсе.\n\nКлючевой особенностью является надежная система отчетности, которая автоматически генерирует профессиональные отчеты в нескольких форматах (doc, xlsx, PDF) с использованием плагина отчетов RDLC.\n\nЯ также внедрил журнал сеансов, который протоколирует все системные изменения для подотчетности и безопасности, а также настраиваемые цветовые схемы для улучшения пользовательского опыта."
        },
        "wpf-diagram-editor": {
            "title": "Nodes",
            "shortDescription": "Гибкий инструмент для создания диаграмм и визуальных представлений",
            "fullDescription": "Nodes - редактор диаграмм, который я создал с использованием Windows Presentation Foundation (WPF), позволяющий пользователям создавать профессиональные диаграммы и визуальные представления.\n\nРедактор предлагает полный набор функций, включая добавление и изменение размеров фигур, размещение и настройку текста, соединение фигур линиями и стрелками, импорт пользовательских фигур из загруженных изображений.\n\nОдним из самых мощных аспектов этого проекта является гибкость экспорта - диаграммы можно сохранять в файлах XML для дальнейшего редактирования или экспортировать как PNG и SVG для обмена и презентаций.\n\nЯ разработал этот проект на 3-м курсе университета ВШЭ в рамках дисциплины \"Архитектура программных систем\", применяя передовые концепции из документации Microsoft WPF, руководств по SVG-путям и других профессиональных ресурсов."
        },
        "3dstruct-editor": {
            "title": "Редактор 3DStruct",
            "shortDescription": "Инструмент 3D-моделирования для создания изогнутых объектов с использованием сплайнов",
            "fullDescription": "3DStruct - это продвинутый редактор 3D-моделирования, который я создал для специализации на построении изогнутых объектов из простых линий с использованием сплайнов.\n\nПостроенный на OpenGL, этот инструмент позволяет пользователям создавать сложные 3D-структуры с интуитивным интерфейсом, доступным даже для начинающих. Редактор поддерживает матричные преобразования для изменения объектов и обеспечивает прямое манипулирование матрицами для опытных пользователей, стремящихся к точному контролю.\n\nОсобенность 3DStruct заключается в его фокусе на преобразовании простых 2D-линий в сложные 3D-округлые объекты с помощью технологии сплайнов, что делает его особенно ценным для дизайнеров, работающих с органическими формами и криволинейными поверхностями.\n\nПрограммное обеспечение было разработано с учетом как удобства использования, так и мощности, предлагая чистый интерфейс для новичков и глубокие математические элементы управления для опытных 3D-моделировщиков."
        },
        "svo-airport-personnel-management": {
            "title": "Система управления персоналом аэропорта",
            "shortDescription": "Система реального времени для подключения персонала аэропорта к соответствующим задачам на основе близости и навыков",
            "fullDescription": "Разработанная во время хакатона, Система управления персоналом аэропорта SVO - это инновационное решение, призванное оптимизировать работу аэропорта, быстро сопоставляя персонал с задачами на основе близости и компетенций.\n\nСистема включает приложение для Windows с полноценным картографическим представлением, отображающим местоположение персонала в реальном времени по всему аэропорту. При возникновении проблем менеджеры могут использовать этот интерфейс для мгновенного определения и уведомления ближайших квалифицированных сотрудников.\n\nЯ реализовал дополнительное мобильное приложение, обрабатывающее уведомления и точное отслеживание местоположения с использованием комбинации GPS и технологии iBeacon. Этот двухтехнологический подход обеспечивает точное позиционирование даже в сложных многоуровневых аэропортовых помещениях.\n\nЗа счет сокращения времени реакции и оптимизации распределения ресурсов эта система значительно повышает операционную эффективность и способность аэропорта быстро решать проблемы безопасности, технического обслуживания и другие вызовы, возникающие в динамичной среде аэропорта."
        }
    },
    "projectDetail": {
        "overview": "Обзор проекта",
        "details": "Детали проекта",
        "technologies": "Стек",
        "demo": "Демо",
        "viewDemo": "Посмотреть демо",
        "liveSite": "Проект онлайн",
        "visitWebsite": "Посетить сайт",
        "codeRepository": "Репозиторий",
        "viewOnGitHub": "Посмотреть на GitHub"
    },
    "buttons": {
        "viewWork": "Посмотреть мои работы"
    },
    "footer": {
        "copyright": "© 2025 Георгий Носачев. Все права защищены.",
        "contact": "Связаться"
    }
}